<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{DE0ACA90-873B-361E-881D-7B98CC5F8B3C}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/GitHub/RaultG-Prog2/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHub/RaultG-Prog2/Quake -BD:/GitHub/RaultG-Prog2/Quake/Binaries --check-stamp-file D:/GitHub/RaultG-Prog2/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/GitHub/RaultG-Prog2/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHub/RaultG-Prog2/Quake -BD:/GitHub/RaultG-Prog2/Quake/Binaries --check-stamp-file D:/GitHub/RaultG-Prog2/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/GitHub/RaultG-Prog2/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHub/RaultG-Prog2/Quake -BD:/GitHub/RaultG-Prog2/Quake/Binaries --check-stamp-file D:/GitHub/RaultG-Prog2/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/GitHub/RaultG-Prog2/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHub/RaultG-Prog2/Quake -BD:/GitHub/RaultG-Prog2/Quake/Binaries --check-stamp-file D:/GitHub/RaultG-Prog2/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\GitHub\RaultG-Prog2\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\ZERO_CHECK.vcxproj">
      <Project>{7E700332-834E-387E-81BD-D95663F396FC}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\boing.vcxproj">
      <Project>{2088934D-CD4C-3A62-B0A0-DB8732D4E712}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\clipboard.vcxproj">
      <Project>{78BC66E2-858A-37AC-83FB-34CD3AF28594}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\cursor.vcxproj">
      <Project>{E43945B4-F418-3623-BC21-69E182F363ED}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\empty.vcxproj">
      <Project>{12F42DC1-3B05-3251-98B6-D7E8F752F086}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\events.vcxproj">
      <Project>{E3E2E8EB-3D80-36BA-944A-DD9E753964C9}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\gamma.vcxproj">
      <Project>{99F5A6CC-D962-3F97-BA8E-6DDDED3C24FE}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\gears.vcxproj">
      <Project>{00B4108F-5AC6-393F-B6DB-8CCED5F8228B}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\src\glfw.vcxproj">
      <Project>{B76CBE58-A727-372A-9E1F-883464E32275}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\glfwinfo.vcxproj">
      <Project>{CA0CCF8A-EC94-3C43-B5ED-47D264E8B0AD}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\heightmap.vcxproj">
      <Project>{1A772746-BA11-32A0-B9E3-AF19B5345B52}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\iconify.vcxproj">
      <Project>{98FAC5F0-BC69-3720-96B0-D96C01752053}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\joysticks.vcxproj">
      <Project>{7807F9B9-698D-361B-8A1F-B52C9F0A0622}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\monitors.vcxproj">
      <Project>{C9BC8A42-1829-3B95-AF8B-4A3DC7729CF8}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\msaa.vcxproj">
      <Project>{7D87902B-E251-33FC-8BE8-DAB6C76655F8}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\particles.vcxproj">
      <Project>{FC0B93B7-2E06-3E27-A496-E70837E8ACDE}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\reopen.vcxproj">
      <Project>{C19E56C5-CA4E-31DD-A511-694FC5D566FA}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\sharing.vcxproj">
      <Project>{2B5FF723-B783-3C90-8722-413990FF5C6B}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\simple.vcxproj">
      <Project>{3D50178A-71C3-3906-85C6-9F45575F1C33}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\splitview.vcxproj">
      <Project>{9C720E7C-863D-356D-BACA-336BBC23AEFC}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\tearing.vcxproj">
      <Project>{45368ED3-EAA5-3A17-BAE8-730E7A0E8F3E}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\threads.vcxproj">
      <Project>{DCA96A26-404C-3EB7-B278-91875BD7C92F}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\title.vcxproj">
      <Project>{79B3681A-DFA2-37A7-9CCE-0D44D9867F98}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\examples\wave.vcxproj">
      <Project>{1CE22416-FC5F-3A0F-8B95-102924445C3E}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHub\RaultG-Prog2\Quake\Binaries\external\glfw-3.1.2\tests\windows.vcxproj">
      <Project>{F49499DA-F8BA-3025-B8D9-533B410B97A8}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>