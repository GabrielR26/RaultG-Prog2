Reseau != local

Logic client <=> server
server peut être client == host (1er client)
server autoritaire => big brother + matrix

Unreal -> Replication
	> Var synchronisée
	> RPC = method local exec online
		|-> client / server / multicast
		!! frequence appel (lourd)
	> Un/Reliable (non-/fiable)
	   |-> ordre balec (sulfateuse)
	   |-> ordre suivie (sniper)
	Accessibilité BP pour prototypage

multi: local ou non ?
	Replication var
	quel RPC ?

Archi network: https://ikrima.dev/ue4guide/networking/networking-overview/

Online-SubSystem: null (LAN) ou steam
	|-> Unreal wrap

Steam: client et server sur machine différent
	!!nom session

Replication:
	_var -> ReplicatedUsing= OnRep_method
		UFUNCTION() R OnRep_method
	    + void Class::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const 
		{ 
			Super::GetLifetimeReplicatedProps(OutLifetimeProps);
			DOREPLIFETIME(Class, varName); //Var replicated => #include <Net/UnrealNetwork.h>
		}
	_RPC (Actor) -> UFUNCTION(Client, ...) ClientRPC_Method(); .h
			void Class::ClientRPC_Method_Implementation() {} .cpp


Project Unreal Online & ship:
	Plugin/Online Subsystem steam enable
	Build.cs: "OnlineSubsystem" + "OnlineSubsystem..." -> online utiliser (steam/unreal...)
	Dossier projet/Config/DefaultEngine.ini: DefaultPlatformService=NULL/Steam + bEnabled=false/true
		|-> https://dev.epicgames.com/documentation/en-us/unreal-engine/online-subsystem-steam-interface-in-unreal-engine

	test PIE: NetMode = listen server + Standalone Game

Batch: "D:\GitHub\RaultG-Prog2\Reseau\First_Reseau\launch_online.bat"
	!! project compil


Ex: D:\GitHub\RaultG-Prog2\Reseau\First_Reseau

Si 1 client OK mais autres KO => client == server
Si prob online => restart unreal
Si pas co Steam => lancer Steam

!!Projet pls: DefaultEngine.ini pas push
		.bat pas même path
  ServerTravel: "/Game/Level_folder/Level_name?listen"
  Get player on server -> Unique Net ID
  BUILD SHIPING +-> steam_appid.txt = 480
	|-> Windows\Project_folder\Binaries\Win64\

Url:
https://dev.epicgames.com/documentation/en-us/unreal-engine/networking-and-multiplayer-in-unreal-engine
https://cedric-neukirchen.net/docs/category/multiplayer-network-compendium/


